server {
    listen 80;
    server_name example.com local.example.com local.example2.com local.example3.com local.example4.com;
    root /data/www;

    default_type 'text/plain; charset=utf-8';

    # 打印内置变量
    location = / {
        expires off;
        return 200 "nginx variables:
schema: $scheme
host: $host
request_uri: $request_uri
request_filename: $request_filename
hostname: $hostname
server_port: $server_port
remote_port:$remote_port
sent_http_content_type: $sent_http_content_type

# request header
Cookie: $http_cookie
If-None-Match: $http_if_none_match

proxy_host: $proxy_host
proxy_port: $proxy_port
";
    }

    # 协商缓存（基于 nginx 指令）
    location ~ .*html$ {
        add_header 'Content-Disposition' 'inline';
        # t < 0 时，效果等同 cache-control: no-cache
        expires -1;
    }

    # 强缓存（基于 nginx 指令）
    location ~ .*css$ {
        # t >= 0 时，效果等同 cache-control: max-age=t
        expires 1d;
    }

    # 协商缓存
    location /api/negotiated_cache {
        if ($http_if_none_match = '"abc"') {
            return 304;
        }

        add_header cache-control 'no-cache';
        # etag 一般基于资源内容的 hash 值、或时间戳、或版本号等计算，用于标识内容是否变化
        add_header etag '"abc"';
        return 200 '$request_uri';
    }

    # 强缓存
    location /api/strong_cache {
        add_header cache-control 'public, max-age=3600';
        return 200 '$request_uri';
    }

    # CORS
    location /api/cors {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
        add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
        # add_header 'Content-Disposition' 'inline';
        add_header "Content-Type" "text/html";
        return 200 'hello';
    }
}